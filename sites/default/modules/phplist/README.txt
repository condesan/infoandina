// $Id: README.txt,v 1.4.2.6 2009/08/04 08:17:36 paulbeaney Exp $

by Paul BEANEY
pb at paulbeaney dot com


INTRODUCTION
------------
The phpList interface module allows you to send newsletters to your Drupal users using a separate phpList installation.  You can allow your
Drupal users to (un)subscribe to newsletters via the Drupal site, but all creating, sending and processing of newsletters/bounces etc. is
done directly in phpList.


BEFORE YOU START
----------------
The phpList pre-requisites are minimal:

	- phplist must be installed and configured (on this or another server)
	- the phpList database must be accessible from this (the Drupal) server on port 3306
	- you must configure this module's "Table prefix" to match the value for '$table_prefix' in the config.php of the phpList installation
	- the value for '$usertable_prefix' must be set the same as '$table_prefix' WITH AN ADDED 'user_' e.g. 'phplist_user_' and 'phplist_' respectively

WARNING: This module appears to have some conflicts with the SimpleNews module.  Please ensure you do not have SimpleNews installed before attempting to install this module.


INSTALLING THE MODULE
---------------------
Once you have PHPlist installed and configured, you can install and configure the phpList module.  Once the basics are setup - namely the database information -
you must assign access to lists for each role. If you don't do this NONE OF YOUR USERS WILL BE ABLE TO SEE ANY OF THE LISTS!  Also, make sure that 
you allow authenticated users to access ALL the lists that anonymous users can - otherwise, when new users register, they risk checking boxes for mailing list which
will then be unavilable to them.

Pay close attention to all the database configuration settings.  99% of problems reported are due to configuration oversights.


WHAT THE MODULE DOES
--------------------
- Creates a phpList user when a Drupal user is created and sets them as "confirmed"
- Adds a "My Newsletters" tab in the Drupal "My Account" - user can set HTML/text preferences and which newsletters to subscribe to
- Optionally creates phpList attributes for any non-standard user roles (i.e. all except "anonymous user" or "authenticated user")
- Provides a block for allowing non-logged in Drupal visitors to subscribe to your mailing lists (thanks to Bec)

ATTENTION FOR PRE-EXISTING DRUPAL INSTALLATIONS
Enabling the module does not automatically copy all your existing Drupal users into phpList - you must use the "Synchronise now" button on the 
phpList module administration page to do this immediately after enabling the module.  However, if you forget to do this, users WILL be synced individually 
at such time as the user (or admin) updated their subscriptions.

Syncing users sets their PHPlist record to "confirmed", but leaves their "blacklist" status, and any subscriptions, as they are.


KEEPING TRACK
-------------
User accounts are synchronised from Drupal to phpList, but not the other way round - if a Drupal user changes their email, or their account
is deleted, this change is replicated to phpList.  A phpList attribute is added to enable you to easily identify users which are not "native"
to phpList - if you end updating/deleting these users through phpList, they will be updated or re-created the next the Drupal user updates
his/her preferences.


ANONYMOUS USERS
---------------
As of 1.12.2.12, there are more features for handling anonymous users.

  1.  Subscribing
This is already handled by the anonymous sign-up block

  2. Confirming
PHPlist is usually configured to send out an email requesting that the user clicks a link to confirm their subscription (does NOT apply to Druapl
account holders as Drupal has handled that side of things).  The usrl 'newsletters/confirm' allows your anonymous user to activate their
subscriptions whilst staying within your Drupal environment.  The PHPlist uniqueID needs to be in the URL for this to function (usually added by
default by PHPlist).

  2. Unsubscribing
A new url '/newsletters/unsubscribe' is provided.  If the PHPlist uniqueID is provided as a GET parameter (usually is in links generated by PHPlist), 
the email address field will be automatically populated.

If logged-in Drupal users attempts to access either the 'confirm' or 'unsubscribe' URLs, they get redirected to My Newsletters.


FAQ
---

1. My users haven't got a "My Newsletters" tab in their account

Ensure that you have assigned the relevant permission to the user roles that you wish to be able to see phpList newsletters. 


2. Which phpList mailing lists will appear in Drupal?

All mailing lists which are marked as 'active' in PHPlist, and for which you have assigned access based on user roles in Drupal (under phpList 
administration).


3. When I try to use the anonymous sign-up block, I get the "Oops" message every time

There are a number of things to check here:
	- The URL to PHPlist (including the trailing slash)
	- Your PHP installation has network access (through firewalls etc.) to the PHPlist server on port 80
	- You are not using mandatory attributes within PHPlist
	- If you have modified your PHPlist subscription page, or are not using it in English, be sure to add a translation for the phrase "Thank you for 
	  subscribing". This is the text that is looked for in order to ascertain that the subscription was successful.


4. I get Drupal "site offline" errors after configuring the PHPlist module

Check that your MySQL configuration is correct - the passwords, host nme etc. and that your PHPlist MySQL server has permissions for the user account
you are attempting to use.  Drupal uses the PHP function parse_url() to handle the database connection string.  Using non-alphanumeirc characters, 
which often have special meanings in URLs, are highly likely to break this module (and Drupal iteself) - so, er, don't use them ;-)


	
UPDATING FROM PREVIOUS VERSION
------------------------------
If updating from the D6 module version 1.12.2.13 or earlier and any problems occur, check you have this table in your Drupal database:

  CREATE TABLE `phplist_access` (
   `lid` int(11) NOT NULL default '0',
   `rid` int(11) NOT NULL default '0',
   PRIMARY KEY  (`lid`,`rid`)
  );